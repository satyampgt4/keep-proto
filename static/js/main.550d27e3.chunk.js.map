{"version":3,"sources":["Components/Header.jsx","Components/CreateArea.jsx","Components/Note.jsx","Components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","id","src","alt","CreateArea","onAdd","useState","isExpended","setExpended","title","content","note","setNote","handleChange","event","target","name","value","oldvalue","type","placeholder","onChange","autoComplete","onClick","rows","preventDefault","Note","onDelete","class","Footer","App","notes","setNotes","deleteNote","oldValue","filter","index","newNotes","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAaeA,MAXf,SAAiBC,GAEb,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKC,GAAI,OAAOC,IAAK,0EAA0EC,IAAK,SACpG,0C,cCyCGC,MA9Cf,YAA8B,IAARC,EAAO,EAAPA,MAAO,EACSC,oBAAS,GADlB,mBACnBC,EADmB,KACPC,EADO,OAEDF,mBAAS,CAC7BG,MAAO,GACPC,QAAS,KAJY,mBAElBC,EAFkB,KAEZC,EAFY,KAMnBC,EAAe,SAACC,GAAU,IAAD,EACNA,EAAMC,OAApBC,EADoB,EACpBA,KAAKC,EADe,EACfA,MACZL,GAAQ,SAACM,GACP,kCACKA,GADL,kBAEGF,EAAOC,QAmBhB,OACI,qBAAKjB,UAAU,MAAf,SACI,iCACKO,GACD,uBAAOY,KAAO,OAAOC,YAAY,QAAQJ,KAAK,QAAQC,MAASN,EAAKF,MAAOY,SAAUR,EAAcS,aAAa,QAEhH,4BACI,0BAAUN,KAAO,UAAUI,YAAc,kBAAkBH,MAASN,EAAKD,QAASW,SAAUR,EAAcU,QAVtG,WAChBf,GAAY,IASiIgB,KAAOjB,EAAa,EAAE,MAE3J,wBAAQgB,QAxBC,SAACT,GAElBT,EAAMM,GACNG,EAAMW,iBACNb,EACI,CACIH,MAAO,GACPC,QAAS,KAGjBF,GAAY,IAcJ,qBC5BDkB,MAXf,SAAe3B,GAEX,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKD,EAAMU,QACX,4BAAIV,EAAMW,UACV,wBAAQa,QAAW,kBAAMxB,EAAM4B,SAAS5B,EAAME,KAA9C,SAAmD,mBAAG2B,MAAM,uBCIzDC,MAVf,SAAiB9B,GAEb,OACI,qBAAKC,UAAU,SAAf,SACI,4ECoCG8B,MApCf,WAAgB,IAAD,EACYxB,mBAAS,IADrB,mBACPyB,EADO,KACAC,EADA,KASPC,EAAa,SAAChC,GAClB+B,GAAS,SAACE,GACR,OAAO,YAAIA,EAASC,QAAO,SAACxB,EAAKyB,GAAN,OAC3BA,IAAUnC,UAId,OACE,qCACA,cAAC,EAAD,IACA,sBAAKD,UAAW,WAAhB,UACA,cAAC,EAAD,CAAYK,MAlBE,SAACgC,GACfL,GAAS,SAACE,GAER,MAAM,GAAN,mBAAWA,GAAX,CAAqBG,UAgBtBN,EAAMO,KAAI,SAAC3B,EAAMyB,GACjB,OACC,cAAC,EAAD,CAEEnC,GAAMmC,EACN3B,MAASE,EAAKF,MACdC,QAAWC,EAAKD,QAChBiB,SAAWM,GAJJG,SAOX,cAAC,EAAD,QCzBWG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.550d27e3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header (props){\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <img id =\"logo\" src =\"https://www.gstatic.com/images/branding/product/1x/keep_2020q4_48dp.png\" alt =\"logo\"/>\r\n            <h3>Keep</h3>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { useState } from 'react';\r\nfunction CreateArea ({onAdd}){\r\n    const[isExpended, setExpended ] = useState(false);\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\",\r\n    });\r\n    const handleChange = (event) =>{\r\n        const {name,value} = event.target;\r\n        setNote((oldvalue) =>{\r\n          return{\r\n            ...oldvalue,\r\n            [name]: value\r\n          };\r\n        });\r\n    };\r\n    const submitButton = (event) =>\r\n    {\r\n        onAdd(note);\r\n        event.preventDefault();\r\n        setNote(\r\n            {\r\n                title: \"\",\r\n                content: \"\",\r\n            }\r\n        )\r\n        setExpended(false);\r\n    }\r\n    const handleExpend= () =>{\r\n        setExpended(true);\r\n    }\r\n    return (\r\n        <div className=\"add\">\r\n            <form>\r\n                {isExpended && (\r\n                <input type = \"text\" placeholder=\"Title\" name=\"title\" value = {note.title} onChange={handleChange} autoComplete=\"off\"/>\r\n                )}\r\n                <p>\r\n                    <textarea name = \"content\" placeholder = \"Take a Note....\" value = {note.content} onChange={handleChange} onClick={handleExpend} rows= {isExpended ? 3:1}></textarea>\r\n                </p>\r\n                <button onClick = {submitButton}>+</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CreateArea;","import React from 'react';\r\n\r\nfunction Note (props){\r\n\r\n    return (\r\n        <div className=\"note\">\r\n            <h1>{props.title}</h1>\r\n            <p>{props.content}</p>\r\n            <button onClick = {() => props.onDelete(props.id)}><i class=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Note;","import React from 'react';\r\n\r\nfunction Footer (props){\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>This Project is Created By Sataym Dengre</p>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Footer;","import { useState } from 'react';\nimport './App.css';\nimport Header from \"./Components/Header\";\nimport CreateArea from \"./Components/CreateArea\";\nimport Note from \"./Components/Note\";\nimport Footer from './Components/Footer';\nfunction App() {\n  const[notes, setNotes] = useState([]);\n  const addNote = (newNotes) =>{\n    setNotes((oldValue) =>\n    {\n      return [...oldValue, newNotes];\n      \n    });\n  }\n  const deleteNote = (id) =>{\n    setNotes((oldValue) =>{\n      return [...oldValue.filter((note,index) =>\n      index !== id)];\n      \n    });\n  }\n  return(\n    <>\n    <Header/>\n    <div className =\"Notearea\">\n    <CreateArea onAdd = {addNote}/>\n    {notes.map((note, index) =>\n    {return(\n      <Note \n        key = {index}\n        id = {index}\n        title = {note.title}\n        content = {note.content}\n        onDelete ={deleteNote}/>) ;\n    })}\n    </div>\n    <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}